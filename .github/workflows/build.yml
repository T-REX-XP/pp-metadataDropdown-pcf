name: build

on:
  push:
    branches: [main]
    tags:
      - "v*" # Push events to matching v*, i.e. v1.0, v20.15.10
  pull_request:
    branches: [main]

jobs:
  build:
    runs-on: windows-latest

    strategy:
      matrix:
        node-version: [16.x]
    env:
      projectfile: src/package
      msbuildtarget: src/package/src
      npm_project_dir: src/MetadataDropdown

    steps:
      - uses: actions/checkout@v3

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}

      - name: Solution Unique name
        id: solution-unique-name
        uses: mavrosxristoforos/get-xml-info@1.0
        with:
          xml-file: ${{ env.msbuildtarget }}/Other/Solution.xml
          xpath: "//ImportExportXml/SolutionManifest/UniqueName"

      - name: Solution Version
        id: solution-version
        uses: mavrosxristoforos/get-xml-info@1.0
        with:
          xml-file: ${{ env.msbuildtarget }}/Other/Solution.xml
          xpath: "//ImportExportXml/SolutionManifest/Version"

      - name: Install dependencies
        run: cd ${{ env.npm_project_dir }} && npm install

      - run: cd ${{ env.npm_project_dir }} && npm run build --if-present

      - name: Use setup-msbuild
        uses: microsoft/setup-msbuild@v1.3.1

      - name: MSBuild
        working-directory: ${{ env.projectfile }}
        run: msbuild /restore /t:rebuild

      - name: Managed Solution Artifact ${{ steps.solution-unique-name.outputs.info }}_${{ steps.solution-version.outputs.info }}_managed.zip
        uses: actions/upload-artifact@v1
        with:
          name: ${{ steps.solution-unique-name.outputs.info }}_${{ steps.solution-version.outputs.info }}_managed.zip
          path: ${{ env.projectfile }}/bin/Debug/${{ steps.solution-unique-name.outputs.info }}.zip

      # - name: Unmanaged Solution Artifact ${{ steps.solution-unique-name.outputs.info }}_${{ steps.solution-version.outputs.info }}_unmanaged.zip
      #   uses: actions/upload-artifact@v1
      #   with:
      #     name: ${{ steps.solution-unique-name.outputs.info }}_${{ steps.solution-version.outputs.info }}_unmanaged.zip
      #     path: ${{ env.projectfile }}/bin/Debug/${{ steps.solution-unique-name.outputs.info }}.zip

      - name: Create Release ${{ steps.solution-unique-name.outputs.info }}_v${{ steps.solution-version.outputs.info }}
        id: create_release
        uses: actions/create-release@v1
        #if: contains(github.ref, 'refs/tags/v')
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: ${{ steps.solution-unique-name.outputs.info }}_v${{ steps.solution-version.outputs.info }}
          draft: false
          prerelease: false

      - name: Upload Release Asset ${{ steps.solution-unique-name.outputs.info }}_${{ steps.solution-version.outputs.info }}_managed.zip (Managed)
        id: release-managed-solution
        uses: actions/upload-release-asset@v1
        if: steps.create_release.conclusion == 'success'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ${{ env.msbuildtarget }}/bin/Debug/${{ steps.solution-unique-name.outputs.info }}_managed.zip
          asset_name: ${{ steps.solution-unique-name.outputs.info }}_${{ steps.solution-version.outputs.info }}_managed.zip
          asset_content_type: application/zip

      # - name: Upload Release Asset ${{ steps.solution-unique-name.outputs.info }}_${{ steps.solution-version.outputs.info }}_unmanaged.zip (Unmanaged)
      #   id: release-unmanaged-solution
      #   uses: actions/upload-release-asset@v1
      #   if: steps.create_release.conclusion == 'success'
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #   with:
      #     upload_url: ${{ steps.create_release.outputs.upload_url }}
      #     asset_path: ${{ env.msbuildtarget }}/bin/Debug/${{ steps.solution-unique-name.outputs.info }}.zip
      #     asset_name: ${{ steps.solution-unique-name.outputs.info }}_${{ steps.solution-version.outputs.info }}_unmanaged.zip
      #     asset_content_type: application/zip
